(0.001) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
No changes detected in app 'core'
(0.001) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
CREATE TABLE "django_migrations" ("id" serial NOT NULL PRIMARY KEY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
(0.007) CREATE TABLE "django_migrations" ("id" serial NOT NULL PRIMARY KEY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None
CREATE TABLE "core_movie" ("id" serial NOT NULL PRIMARY KEY, "title" varchar(140) NOT NULL, "plot" text NOT NULL, "year" integer NOT NULL CHECK ("year" >= 0), "rating" integer NOT NULL, "runtime" integer NOT NULL CHECK ("runtime" >= 0), "website" varchar(200) NOT NULL); (params None)
(0.004) CREATE TABLE "core_movie" ("id" serial NOT NULL PRIMARY KEY, "title" varchar(140) NOT NULL, "plot" text NOT NULL, "year" integer NOT NULL CHECK ("year" >= 0), "rating" integer NOT NULL, "runtime" integer NOT NULL CHECK ("runtime" >= 0), "website" varchar(200) NOT NULL); args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0001_initial', '2019-09-19T21:29:15.827462+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0001_initial', datetime.datetime(2019, 9, 19, 21, 29, 15, 827462, tzinfo=<UTC>))
CREATE TABLE "core_person" ("id" serial NOT NULL PRIMARY KEY, "first_name" varchar(140) NOT NULL, "last_name" varchar(120) NOT NULL, "born" date NOT NULL, "died" date NULL); (params None)
(0.002) CREATE TABLE "core_person" ("id" serial NOT NULL PRIMARY KEY, "first_name" varchar(140) NOT NULL, "last_name" varchar(120) NOT NULL, "born" date NOT NULL, "died" date NULL); args=None
ALTER TABLE "core_movie" ADD COLUMN "director_id" integer NULL; (params [])
(0.000) ALTER TABLE "core_movie" ADD COLUMN "director_id" integer NULL; args=[]
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0002_auto_20190313_1441', '2019-09-19T21:29:15.838705+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0002_auto_20190313_1441', datetime.datetime(2019, 9, 19, 21, 29, 15, 838705, tzinfo=<UTC>))
CREATE INDEX "core_movie_director_id_0df6f676" ON "core_movie" ("director_id"); (params ())
(0.002) CREATE INDEX "core_movie_director_id_0df6f676" ON "core_movie" ("director_id"); args=()
ALTER TABLE "core_movie" ADD CONSTRAINT "core_movie_director_id_0df6f676_fk_core_person_id" FOREIGN KEY ("director_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie" ADD CONSTRAINT "core_movie_director_id_0df6f676_fk_core_person_id" FOREIGN KEY ("director_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
CREATE TABLE "core_role" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(140) NOT NULL); (params None)
(0.002) CREATE TABLE "core_role" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(140) NOT NULL); args=None
CREATE TABLE "core_movie_writers" ("id" serial NOT NULL PRIMARY KEY, "movie_id" integer NOT NULL, "person_id" integer NOT NULL); (params None)
(0.002) CREATE TABLE "core_movie_writers" ("id" serial NOT NULL PRIMARY KEY, "movie_id" integer NOT NULL, "person_id" integer NOT NULL); args=None
ALTER TABLE "core_role" ADD COLUMN "movie_id" integer NOT NULL; (params [])
(0.000) ALTER TABLE "core_role" ADD COLUMN "movie_id" integer NOT NULL; args=[]
ALTER TABLE "core_role" ADD COLUMN "person_id" integer NOT NULL; (params [])
(0.000) ALTER TABLE "core_role" ADD COLUMN "person_id" integer NOT NULL; args=[]
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_person_id_name_b2b6b66b_uniq" UNIQUE ("movie_id", "person_id", "name"); (params ())
(0.002) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_person_id_name_b2b6b66b_uniq" UNIQUE ("movie_id", "person_id", "name"); args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0003_auto_20190313_1707', '2019-09-19T21:29:15.870537+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0003_auto_20190313_1707', datetime.datetime(2019, 9, 19, 21, 29, 15, 870537, tzinfo=<UTC>))
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_6a53c7e4_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_6a53c7e4_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_person_id_abb709f8_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_person_id_abb709f8_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_person_id_1ce1004e_uniq" UNIQUE ("movie_id", "person_id"); (params ())
(0.002) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_person_id_1ce1004e_uniq" UNIQUE ("movie_id", "person_id"); args=()
CREATE INDEX "core_movie_writers_movie_id_6a53c7e4" ON "core_movie_writers" ("movie_id"); (params ())
(0.001) CREATE INDEX "core_movie_writers_movie_id_6a53c7e4" ON "core_movie_writers" ("movie_id"); args=()
CREATE INDEX "core_movie_writers_person_id_abb709f8" ON "core_movie_writers" ("person_id"); (params ())
(0.002) CREATE INDEX "core_movie_writers_person_id_abb709f8" ON "core_movie_writers" ("person_id"); args=()
CREATE INDEX "core_role_movie_id_3e74205c" ON "core_role" ("movie_id"); (params ())
(0.001) CREATE INDEX "core_role_movie_id_3e74205c" ON "core_role" ("movie_id"); args=()
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_3e74205c_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_3e74205c_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
CREATE INDEX "core_role_person_id_1127a6da" ON "core_role" ("person_id"); (params ())
(0.002) CREATE INDEX "core_role_person_id_1127a6da" ON "core_role" ("person_id"); args=()
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_person_id_1127a6da_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_person_id_1127a6da_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0004_auto_20190411_1533', '2019-09-19T21:29:15.889809+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0004_auto_20190411_1533', datetime.datetime(2019, 9, 19, 21, 29, 15, 889809, tzinfo=<UTC>))
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
Operations to perform:
  Apply all migrations: core
Running migrations:
  Applying core.0001_initial... OK
  Applying core.0002_auto_20190313_1441... OK
  Applying core.0003_auto_20190313_1707... OK
  Applying core.0004_auto_20190411_1533... OK
(0.002) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.001) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
No changes detected in app 'core'
(0.001) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
Operations to perform:
  Apply all migrations: core
Running migrations:
  No migrations to apply.
(0.002) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
No changes detected in app 'core'
(0.001) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
Operations to perform:
  Apply all migrations: core
Running migrations:
  No migrations to apply.
(0.004) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.002) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
No changes detected in app 'core'
(0.001) SELECT t.oid, typarray FROM pg_type t JOIN pg_namespace ns ON typnamespace = ns.oid WHERE typname = 'hstore'; args=None
(0.000) SELECT typarray FROM pg_type WHERE typname = 'citext'; args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
CREATE TABLE "django_migrations" ("id" serial NOT NULL PRIMARY KEY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
(0.007) CREATE TABLE "django_migrations" ("id" serial NOT NULL PRIMARY KEY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None
CREATE TABLE "core_movie" ("id" serial NOT NULL PRIMARY KEY, "title" varchar(140) NOT NULL, "plot" text NOT NULL, "year" integer NOT NULL CHECK ("year" >= 0), "rating" integer NOT NULL, "runtime" integer NOT NULL CHECK ("runtime" >= 0), "website" varchar(200) NOT NULL); (params None)
(0.004) CREATE TABLE "core_movie" ("id" serial NOT NULL PRIMARY KEY, "title" varchar(140) NOT NULL, "plot" text NOT NULL, "year" integer NOT NULL CHECK ("year" >= 0), "rating" integer NOT NULL, "runtime" integer NOT NULL CHECK ("runtime" >= 0), "website" varchar(200) NOT NULL); args=None
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0001_initial', '2019-09-19T21:45:08.994653+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0001_initial', datetime.datetime(2019, 9, 19, 21, 45, 8, 994653, tzinfo=<UTC>))
CREATE TABLE "core_person" ("id" serial NOT NULL PRIMARY KEY, "first_name" varchar(140) NOT NULL, "last_name" varchar(120) NOT NULL, "born" date NOT NULL, "died" date NULL); (params None)
(0.002) CREATE TABLE "core_person" ("id" serial NOT NULL PRIMARY KEY, "first_name" varchar(140) NOT NULL, "last_name" varchar(120) NOT NULL, "born" date NOT NULL, "died" date NULL); args=None
ALTER TABLE "core_movie" ADD COLUMN "director_id" integer NULL; (params [])
(0.000) ALTER TABLE "core_movie" ADD COLUMN "director_id" integer NULL; args=[]
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0002_auto_20190313_1441', '2019-09-19T21:45:09.006886+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0002_auto_20190313_1441', datetime.datetime(2019, 9, 19, 21, 45, 9, 6886, tzinfo=<UTC>))
CREATE INDEX "core_movie_director_id_0df6f676" ON "core_movie" ("director_id"); (params ())
(0.005) CREATE INDEX "core_movie_director_id_0df6f676" ON "core_movie" ("director_id"); args=()
ALTER TABLE "core_movie" ADD CONSTRAINT "core_movie_director_id_0df6f676_fk_core_person_id" FOREIGN KEY ("director_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie" ADD CONSTRAINT "core_movie_director_id_0df6f676_fk_core_person_id" FOREIGN KEY ("director_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
CREATE TABLE "core_role" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(140) NOT NULL); (params None)
(0.002) CREATE TABLE "core_role" ("id" serial NOT NULL PRIMARY KEY, "name" varchar(140) NOT NULL); args=None
CREATE TABLE "core_movie_writers" ("id" serial NOT NULL PRIMARY KEY, "movie_id" integer NOT NULL, "person_id" integer NOT NULL); (params None)
(0.002) CREATE TABLE "core_movie_writers" ("id" serial NOT NULL PRIMARY KEY, "movie_id" integer NOT NULL, "person_id" integer NOT NULL); args=None
ALTER TABLE "core_role" ADD COLUMN "movie_id" integer NOT NULL; (params [])
(0.000) ALTER TABLE "core_role" ADD COLUMN "movie_id" integer NOT NULL; args=[]
ALTER TABLE "core_role" ADD COLUMN "person_id" integer NOT NULL; (params [])
(0.000) ALTER TABLE "core_role" ADD COLUMN "person_id" integer NOT NULL; args=[]
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_person_id_name_b2b6b66b_uniq" UNIQUE ("movie_id", "person_id", "name"); (params ())
(0.002) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_person_id_name_b2b6b66b_uniq" UNIQUE ("movie_id", "person_id", "name"); args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0003_auto_20190313_1707', '2019-09-19T21:45:09.041906+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0003_auto_20190313_1707', datetime.datetime(2019, 9, 19, 21, 45, 9, 41906, tzinfo=<UTC>))
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_6a53c7e4_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_6a53c7e4_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_person_id_abb709f8_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_person_id_abb709f8_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_person_id_1ce1004e_uniq" UNIQUE ("movie_id", "person_id"); (params ())
(0.002) ALTER TABLE "core_movie_writers" ADD CONSTRAINT "core_movie_writers_movie_id_person_id_1ce1004e_uniq" UNIQUE ("movie_id", "person_id"); args=()
CREATE INDEX "core_movie_writers_movie_id_6a53c7e4" ON "core_movie_writers" ("movie_id"); (params ())
(0.001) CREATE INDEX "core_movie_writers_movie_id_6a53c7e4" ON "core_movie_writers" ("movie_id"); args=()
CREATE INDEX "core_movie_writers_person_id_abb709f8" ON "core_movie_writers" ("person_id"); (params ())
(0.002) CREATE INDEX "core_movie_writers_person_id_abb709f8" ON "core_movie_writers" ("person_id"); args=()
CREATE INDEX "core_role_movie_id_3e74205c" ON "core_role" ("movie_id"); (params ())
(0.002) CREATE INDEX "core_role_movie_id_3e74205c" ON "core_role" ("movie_id"); args=()
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_3e74205c_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_movie_id_3e74205c_fk_core_movie_id" FOREIGN KEY ("movie_id") REFERENCES "core_movie" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
CREATE INDEX "core_role_person_id_1127a6da" ON "core_role" ("person_id"); (params ())
(0.002) CREATE INDEX "core_role_person_id_1127a6da" ON "core_role" ("person_id"); args=()
ALTER TABLE "core_role" ADD CONSTRAINT "core_role_person_id_1127a6da_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; (params ())
(0.001) ALTER TABLE "core_role" ADD CONSTRAINT "core_role_person_id_1127a6da_fk_core_person_id" FOREIGN KEY ("person_id") REFERENCES "core_person" ("id") DEFERRABLE INITIALLY DEFERRED; args=()
(0.001) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0004_auto_20190411_1533', '2019-09-19T21:45:09.060999+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('core', '0004_auto_20190411_1533', datetime.datetime(2019, 9, 19, 21, 45, 9, 60999, tzinfo=<UTC>))
(0.000) 
            SELECT c.relname,
            CASE WHEN c.relispartition THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
Operations to perform:
  Apply all migrations: core
Running migrations:
  Applying core.0001_initial... OK
  Applying core.0002_auto_20190313_1441... OK
  Applying core.0003_auto_20190313_1707... OK
  Applying core.0004_auto_20190411_1533... OK
